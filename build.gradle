buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
    }
}

version "2.0.0-RC1-3.3x"
group "com.rxlogix"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.grails:grails-core"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    console "org.grails:grails-console"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-test-mixins:3.3.0"
    testCompile "org.grails.plugins:geb"

    testRuntime 'org.seleniumhq.selenium:selenium-chrome-driver:2.44.0'

    compile('org.springframework.session:spring-session:1.0.2.RELEASE')
    compile('org.springframework.data:spring-data-redis:1.4.2.RELEASE')
    compile('redis.clients:jedis:2.5.2')
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
publishing {
    publications {
        mavenJar(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username "gautam.malhotra"
                password "rxlogix"
            }
            url "http://10.100.3.6:8080/nexus/content/repositories/common-component-snapshots/"
        }
    }
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

test {
    jvmArgs '-Xverify:none'
}

integrationTest {
    jvmArgs '-Xverify:none'
}

integrationTest {
    testLogging {
        events 'started', 'passed'
    }
}